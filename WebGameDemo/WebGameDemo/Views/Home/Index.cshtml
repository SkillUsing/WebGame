<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <title>Hello World</title>
    <script src="~/Scripts/pixi.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            overflow-x: hidden;
            overflow-y: hidden;
        }
    </style>
</head>
<body>
    <script type="text/javascript">
        var renderer, state, stage, sprite;

        //环境
        function Init() {
            renderer = PIXI.autoDetectRenderer(520, 520,{autoResize: true});
            renderer.resize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.view);
            stage = new PIXI.Container();
            renderer.render(stage);
        }

        window.addEventListener("resize", function (event) {
            renderer.resize(window.innerWidth, window.innerHeight);
        });
        Init();
        //Loading
        function Loader() {
            PIXI.loader
                .add("timg", "../Content/timg.jpg")
                .add("background", "../Content/background.jpg")
                .load(setup);
        }

        //键盘
        function keyboard(keyCode) {
            var key = {};
            key.code = keyCode;
            key.isDown = false;
            key.isUp = true;
            key.press = undefined;
            key.release = undefined;
            key.downHandler = function (event) {
                if (event.keyCode === key.code) {
                    if (key.isUp && key.press) key.press();
                    key.isDown = true;
                    key.isUp = false;
                }
                event.preventDefault();
            };
            key.upHandler = function (event) {
                if (event.keyCode === key.code) {
                    if (key.isDown && key.release) key.release();
                    key.isDown = false;
                    key.isUp = true;
                }
                event.preventDefault();
            };
            window.addEventListener(
                "keydown",
                key.downHandler.bind(key),
                false
            );
            window.addEventListener(
                "keyup",
                key.upHandler.bind(key),
                false
            );
            return key;
        }

        //初始化游戏
        function setup() {
            sprite = PIXI.Sprite(
                PIXI.loader.resources["timg"].texture
            );
            sprite.y = 96;
            sprite.vx = 0;
            sprite.vy = 0;
            sprite.width = 96;
            sprite.height = 96;
            stage.addChild(sprite);

            var left = keyboard(37),
                up = keyboard(38),
                right = keyboard(39),
                down = keyboard(40);

            left.press = function () {
                sprite.vx = -5;
                if (right.isDown) {
                    sprite.vx = 0;
                }
            };
            left.release = function () {
                sprite.vx = 0;
            };

            up.press = function () {
                sprite.vy = -5;
                if (down.isDown) {
                    sprite.vy = 0;
                }
            };
            up.release = function () {
                sprite.vy = 0;
            };

            right.press = function () {
                sprite.vx = 5;
                if (left.isDown) {
                    sprite.vx = 0;
                }
            };
            right.release = function () {
                sprite.vx = 0;
            };

            down.press = function () {
                sprite.vy = 5;
                if (up.isDown) {
                    sprite.vy = 0;
                }
            };
            down.release = function () {
                sprite.vy = 0;
            };

            state = play;

            renderer.render(stage);
            gameLoop();
        }

        function gameLoop() {
            requestAnimationFrame(gameLoop);
            state();
            renderer.render(stage);
        }

        function play() {
            sprite.x += sprite.vx;
            sprite.y += sprite.vy;
        }


    </script>
</body>
</html>
